#!/usr/bin/env bash

##
# Bash script to clear cached memory on (Ubuntu/Debian) Linux.
# This script frees up RAM by clearing the file system buffers and caches.
# By mrprohack and tamilanmkv
##

# Check if script is run as root
if [[ $EUID -ne 0 ]]; then
    printf "This script must be run as root\n" >&2
    exit 1
fi

# Define color codes
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

# Check if bc is installed
if ! command -v bc &> /dev/null; then
    printf "${RED}bc tool is not installed. Please install it before running this script.${NC}\n"
    printf "${YELLOW}You can install it by running the following command:${NC}\n"
    printf "${GREEN}sudo apt install bc${NC}\n"
    exit 1
fi

# Get memory information
free_memory_before=$(awk '/^MemFree:/ {print $2}' /proc/meminfo | awk '{print $1/1024}')
cached_memory_before=$(awk '/^Cached:/ {print $2}' /proc/meminfo | awk '{print $1/1024}')

# Log file path
LOG_FILE="/var/log/freeram.log"

# Function to log messages
log_message() {
    echo "$(date '+%Y-%m-%d %H:%M:%S') - $1" >> "$LOG_FILE"
}

# Output information
printf "${YELLOW}This script will clear cached memory and free up your RAM.\n\nAt the moment you have ${GREEN}%0.2f MiB${NC} cached and ${GREEN}%0.2f MiB${NC} free memory.\n" \
    "$cached_memory_before" "$free_memory_before"

# Confirmation prompt before clearing cache
read -p "Are you sure you want to clear the cached memory? (y/n): " -n 1 -r
echo    # move to a new line
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    printf "${YELLOW}Operation cancelled.${NC}\n"
    exit 0
fi

# Test sync
if ! sync; then
    printf "${RED}Failed to sync the filesystem.${NC}\n"
    exit 1
fi

# Clear filesystem buffer using "sync" and clear caches
if ! echo 3 > /proc/sys/vm/drop_caches; then
    printf "${RED}Failed to clear the caches. Please check your permissions or system settings.${NC}\n"
    exit 1
fi

free_memory_after=$(awk '/^MemFree:/ {print $2}' /proc/meminfo | awk '{print $1/1024}')

# Calculate the amount of memory freed
memory_freed=$(echo "scale=2; $free_memory_after - $free_memory_before" | bc)

# Log the memory freed
log_message "Cleared cached memory: Freed ${memory_freed} MiB."

# Output summary
printf "This freed ${GREEN}%0.2f MiB${NC}, so now you have ${GREEN}%0.2f MiB${NC} of free RAM.\n" \
    "$memory_freed" "$free_memory_after"
